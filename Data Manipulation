Question - 1
------------
const input = [
  { id: 1, type: 'fruit', name: 'apple' },
  { id: 2, type: 'vegetable', name: 'carrot' },
  { id: 3, type: 'fruit', name: 'banana' },
  { id: 4, type: 'vegetable', name: 'lettuce' }
];

console.log(groupBy(input, 'type'));

// Output:
// {
//   fruit: [
//     { id: 1, type: 'fruit', name: 'apple' },
//     { id: 3, type: 'fruit', name: 'banana' }
//   ],
//   vegetable: [
//     { id: 2, type: 'vegetable', name: 'carrot' },
//     { id: 4, type: 'vegetable', name: 'lettuce' }
//   ]
// }

function groupBy(input, key){
	let ans = {};
  input.forEach(item => {
  	if(ans[item[key]]){
    	ans[item[key]].push(item);
    }else{
    	ans[item[key]] = [item];
    }
  });
  return ans;
}



Question - 2
---------
const students = [
  { id: 1, name: 'Alice', grade: 'A' },
  { id: 2, name: 'Bob', grade: 'B' },
  { id: 3, name: 'Charlie', grade: 'A' },
  { id: 4, name: 'David', grade: 'C' },
  { id: 5, name: 'Eve', grade: 'C' },
];

console.log(groupStudentsByGrade(students));

// Output:
// {
//   A: [
//     { id: 1, name: 'Alice', grade: 'A' },
//     { id: 3, name: 'Charlie', grade: 'A' }
//   ],
//   B: [
//     { id: 2, name: 'Bob', grade: 'B' },
//     { id: 5, name: 'Eve', grade: 'B' }
//   ],
//   C: [
//     { id: 4, name: 'David', grade: 'C' }
//   ]
// }

function groupStudentsByGrade(students){
	let ans={};
  students.forEach(student => {
  	if(ans[student["grade"]]){
    	ans[student["grade"]].push(student);
    }else{
    	ans[student["grade"]] = [student];
    }
  });
  return ans;
}



Question - 3
-------------
const products = [
  { id: 1, name: 'Laptop', price: 1500 },
  { id: 2, name: 'Phone', price: 700 },
  { id: 3, name: 'Tablet', price: 300 },
  { id: 4, name: 'Monitor', price: 200 }
];

console.log(filterExpensiveProducts(products, 500));

// Output: 
// [
//   { id: 1, name: 'Laptop', price: 1500 },
//   { id: 2, name: 'Phone', price: 700 }
// ]

function filterExpensiveProducts(products, price){
	return products.filter(product => product.price > price)
}


Question - 4
---------
const students = [
  { id: 1, name: 'Alice', score: 85 },
  { id: 2, name: 'Bob', score: 92 },
  { id: 3, name: 'Charlie', score: 78 },
  { id: 4, name: 'David', score: 90 }
];

console.log(sortStudentsByScore(students));

// Output:
// [
//   { id: 2, name: 'Bob', score: 92 },
//   { id: 4, name: 'David', score: 90 },
//   { id: 1, name: 'Alice', score: 85 },
//   { id: 3, name: 'Charlie', score: 78 }
// ]

function sortStudentsByScore(students){
	students.sort((a,b) => (b.score - a.score));
  return students;
}


Question - 5
-------
const users = [
  { firstName: 'John', lastName: 'Doe', email: 'john.doe@example.com' },
  { firstName: 'Jane', lastName: 'Smith', email: 'jane.smith@example.com' },
  { firstName: 'Emily', lastName: 'Jones', email: 'emily.jones@example.com' }
];

console.log(getUserFullNames(users));

// Output:
// [
//   { fullName: 'John Doe', email: 'john.doe@example.com' },
//   { fullName: 'Jane Smith', email: 'jane.smith@example.com' },
//   { fullName: 'Emily Jones', email: 'emily.jones@example.com' }
// ]

function getUserFullNames(users){
	return users.map(user => ({
  	fullName: user.firstName + ' ' + user.lastName,
    email: user.email
  }))
}


Question - 6
----------

const users = [
  { userId: 1, name: 'Alice' },
  { userId: 2, name: 'Bob' },
  { userId: 3, name: 'Charlie' }
];

const orders = [
  { orderId: 101, userId: 1, product: 'Laptop' },
  { orderId: 102, userId: 2, product: 'Phone' },
  { orderId: 103, userId: 3, product: 'Tablet' },
  { orderId: 104, userId: 1, product: 'Monitor' }
];

console.log(mergeUserOrders(users, orders));

// Output:
// [
//   { userId: 1, name: 'Alice', orders: [ { orderId: 101, product: 'Laptop' }, { orderId: 104, product: 'Monitor' } ] },
//   { userId: 2, name: 'Bob', orders: [ { orderId: 102, product: 'Phone' } ] },
//   { userId: 3, name: 'Charlie', orders: [ { orderId: 103, product: 'Tablet' } ] }
// ]


function mergeUserOrders(users, orders){
  let ordersById = {};
  orders.forEach(order => {
    let id = order["userId"]
    delete order["userId"];
    
    if(ordersById[id]){
    	ordersById[id].push(order);
    }else{
    	ordersById[id] = [order];
    }
  });
  
  return users.map(user => ({
  	...user,
    orders: [...(ordersById[user.userId] || [])],
  }));
};





Question - 7
---------

const transactions = [
  { id: 1, amount: 100, type: 'income' },
  { id: 2, amount: 50, type: 'expense' },
  { id: 3, amount: 150, type: 'income' },
  { id: 4, amount: 200, type: 'income' },
  { id: 5, amount: 75, type: 'expense' }
];

console.log(summarizeTransactions(transactions));

// Output:
// {
//   income: 450,
//   expense: 125
// }

function summarizeTransactions(transactions){
	return transactions.reduce((acc, transaction)=>{
  	acc[transaction["type"]] += transaction["amount"];
    return acc;
  }, {income: 0, expense: 0})
}


Question - 8
----------

const products = [
  { id: 1, name: 'Laptop', price: 1500 },
  { id: 2, name: 'Phone', price: 700 },
  { id: 3, name: 'Tablet', price: 300 },
  { id: 4, name: 'Monitor', price: 200 }
];

console.log(findMostExpensiveProduct(products));

// Output:
// { id: 1, name: 'Laptop', price: 1500 }

function findMostExpensiveProduct(products){
	return products.reduce((ans, product)=>{
  	return ans.price > product.price ? ans : product;
  })
}
